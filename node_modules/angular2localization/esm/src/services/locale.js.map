{"version":3,"sources":["src/services/locale.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAMH;;;;;;;;;;;;;;;;GAgBG;AACH;IAEI,YAAmB,MAAsB,EAAS,YAAkC;QAAjE,WAAM,GAAN,MAAM,CAAgB;QAAS,iBAAY,GAAZ,YAAY,CAAsB;IAAI,CAAC;IAEzF,sDAAsD;IACtD,IAAW,IAAI;QAEX,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;IAE1C,CAAC;IAED,2BAA2B;IAC3B,IAAW,aAAa;QAEpB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;IAE1C,CAAC;IAED,6BAA6B;IAC7B,IAAW,QAAQ;QAEf,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;IAE5C,CAAC;AAEL,CAAC;AAAA","file":"src/services/locale.js","sourcesContent":["/**\r\n * ANGULAR 2 LOCALIZATION\r\n * An Angular 2 library to translate messages, dates and numbers.\r\n * Written by Roberto Simonetti.\r\n * MIT license.\r\n * https://github.com/robisim74/angular2localization\r\n */\r\n\r\n// Services.\r\nimport { LocaleService } from './locale.service';\r\nimport { LocalizationService } from './localization.service';\r\n\r\n/**\r\n * Locale superclass.\r\n * Provides the methods for localization.\r\n * \r\n * Extend this class in components to provide the necessary methods for localization:\r\n * \r\n * export class AppComponent extends Locale {\r\n *\r\n *     constructor(public locale: LocaleService, public localization: LocalizationService) {\r\n *         super(locale, localization);\r\n *\r\n *     }\r\n *\r\n * } \r\n * \r\n * @author Roberto Simonetti\r\n */\r\nexport class Locale {\r\n\r\n    constructor(public locale?: LocaleService, public localization?: LocalizationService) { }\r\n\r\n    // Gets the language code for the LocalizationService.\r\n    public get lang(): string {\r\n\r\n        return this.localization.languageCode;\r\n\r\n    }\r\n\r\n    // Gets the default locale.\r\n    public get defaultLocale(): string {\r\n\r\n        return this.locale.getDefaultLocale();\r\n\r\n    }\r\n\r\n    // Gets the current currency.\r\n    public get currency(): string {\r\n\r\n        return this.locale.getCurrentCurrency();\r\n\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}