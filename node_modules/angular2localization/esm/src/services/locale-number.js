/**
 * ANGULAR 2 LOCALIZATION
 * An Angular 2 library to translate messages, dates and numbers.
 * Written by Roberto Simonetti.
 * MIT license.
 * https://github.com/robisim74/angular2localization
 */
import { NumberWrapper, RegExpWrapper, isBlank, isNumber, isPresent } from '@angular/common/src/facade/lang';
import { BaseException } from '@angular/common/src/facade/exceptions';
import { NumberFormatter } from '@angular/common/src/facade/intl';
import { InvalidPipeArgumentException } from '@angular/common/src/pipes/invalid_pipe_argument_exception';
/**
 * LocaleNumber class.
 * Class to format numbers.
 */
export class LocaleNumber {
    static format(pipe, defaultLocale, value, style, digits, currency = null, currencyAsSymbol = false) {
        if (isBlank(value)) {
            return null;
        }
        if (!isNumber(value)) {
            throw new InvalidPipeArgumentException(pipe, value);
        }
        var minInt = 1;
        var minFraction = 0;
        var maxFraction = 3;
        const NUMBER_FORMAT_REGEXP = /^(\d+)?\.((\d+)(\-(\d+))?)?$/g;
        if (isPresent(digits)) {
            var parts = RegExpWrapper.firstMatch(NUMBER_FORMAT_REGEXP, digits);
            if (isBlank(parts)) {
                throw new BaseException(`${digits} is not a valid digit info for number pipes`);
            }
            if (isPresent(parts[1])) {
                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);
            }
            if (isPresent(parts[3])) {
                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);
            }
            if (isPresent(parts[5])) {
                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);
            }
        }
        return NumberFormatter.format(value, defaultLocale, style, {
            minimumIntegerDigits: minInt,
            minimumFractionDigits: minFraction,
            maximumFractionDigits: maxFraction,
            currency: currency,
            currencyAsSymbol: currencyAsSymbol
        });
    }
}

//# sourceMappingURL=locale-number.js.map
