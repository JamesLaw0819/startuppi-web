{"version":3,"sources":["src/services/locale-number.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,qBAAiF,iCAAiC,CAAC,CAAA;AACnH,2BAA8B,uCAAuC,CAAC,CAAA;AACtE,qBAAmD,iCAAiC,CAAC,CAAA;AACrF,gDAA6C,2DAA2D,CAAC,CAAA;AAEzG;;;GAGG;AACH;IAAA;IA8CA,CAAC;IA5CiB,mBAAM,GAApB,UAAqB,IAAU,EAAE,aAAqB,EAAE,KAAa,EAAE,KAAwB,EAAE,MAAc,EAAE,QAAuB,EAAE,gBAAiC;QAA1D,wBAAuB,GAAvB,eAAuB;QAAE,gCAAiC,GAAjC,wBAAiC;QAEvK,EAAE,CAAC,CAAC,cAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAAC,CAAC;QAEpC,EAAE,CAAC,CAAC,CAAC,eAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEnB,MAAM,IAAI,8DAA4B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAExD,CAAC;QAED,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,IAAI,WAAW,GAAW,CAAC,CAAC;QAC5B,IAAI,WAAW,GAAW,CAAC,CAAC;QAC5B,IAAM,oBAAoB,GAAW,+BAA+B,CAAC;QAErE,EAAE,CAAC,CAAC,gBAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAEpB,IAAI,KAAK,GAAoB,oBAAa,CAAC,UAAU,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;YAEpF,EAAE,CAAC,CAAC,cAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjB,MAAM,IAAI,0BAAa,CAAI,MAAM,gDAA6C,CAAC,CAAC;YACpF,CAAC;YACD,EAAE,CAAC,CAAC,gBAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,GAAG,oBAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,CAAC;YACD,EAAE,CAAC,CAAC,gBAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtB,WAAW,GAAG,oBAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,CAAC;YACD,EAAE,CAAC,CAAC,gBAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtB,WAAW,GAAG,oBAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,CAAC;QAEL,CAAC;QAED,MAAM,CAAC,sBAAe,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE;YACvD,oBAAoB,EAAE,MAAM;YAC5B,qBAAqB,EAAE,WAAW;YAClC,qBAAqB,EAAE,WAAW;YAClC,QAAQ,EAAE,QAAQ;YAClB,gBAAgB,EAAE,gBAAgB;SACrC,CAAC,CAAC;IAEP,CAAC;IAEL,mBAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,oBAAY,eA8CxB,CAAA","file":"src/services/locale-number.js","sourcesContent":["/**\r\n * ANGULAR 2 LOCALIZATION\r\n * An Angular 2 library to translate messages, dates and numbers.\r\n * Written by Roberto Simonetti.\r\n * MIT license.\r\n * https://github.com/robisim74/angular2localization\r\n */\r\n\r\nimport { NumberWrapper, RegExpWrapper, Type, isBlank, isNumber, isPresent } from '@angular/common/src/facade/lang';\r\nimport { BaseException } from '@angular/common/src/facade/exceptions';\r\nimport { NumberFormatStyle, NumberFormatter } from '@angular/common/src/facade/intl';\r\nimport { InvalidPipeArgumentException } from '@angular/common/src/pipes/invalid_pipe_argument_exception';\r\n\r\n/**\r\n * LocaleNumber class.\r\n * Class to format numbers.\r\n */\r\nexport class LocaleNumber {\r\n\r\n    public static format(pipe: Type, defaultLocale: string, value: number, style: NumberFormatStyle, digits: string, currency: string = null, currencyAsSymbol: boolean = false): string {\r\n\r\n        if (isBlank(value)) { return null; }\r\n\r\n        if (!isNumber(value)) {\r\n\r\n            throw new InvalidPipeArgumentException(pipe, value);\r\n\r\n        }\r\n\r\n        var minInt: number = 1;\r\n        var minFraction: number = 0;\r\n        var maxFraction: number = 3;\r\n        const NUMBER_FORMAT_REGEXP: RegExp = /^(\\d+)?\\.((\\d+)(\\-(\\d+))?)?$/g;\r\n\r\n        if (isPresent(digits)) {\r\n\r\n            var parts: RegExpExecArray = RegExpWrapper.firstMatch(NUMBER_FORMAT_REGEXP, digits);\r\n\r\n            if (isBlank(parts)) {\r\n                throw new BaseException(`${digits} is not a valid digit info for number pipes`);\r\n            }\r\n            if (isPresent(parts[1])) {  // Min integer digits.\r\n                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\r\n            }\r\n            if (isPresent(parts[3])) {  // Min fraction digits.\r\n                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\r\n            }\r\n            if (isPresent(parts[5])) {  // Max fraction digits.\r\n                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\r\n            }\r\n\r\n        }\r\n\r\n        return NumberFormatter.format(value, defaultLocale, style, {\r\n            minimumIntegerDigits: minInt,\r\n            minimumFractionDigits: minFraction,\r\n            maximumFractionDigits: maxFraction,\r\n            currency: currency,\r\n            currencyAsSymbol: currencyAsSymbol\r\n        });\r\n\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}