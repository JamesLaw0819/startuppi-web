{"version":3,"sources":["src/services/locale.service.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;;;;;;AAEH,qBAAiD,eAAe,CAAC,CAAA;AAEjE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+GG;AACW;IA4FV;QArFA;;WAEG;QACO,wBAAmB,GAAyB,IAAI,mBAAY,EAAU,CAAC;QAEjF;;WAEG;QACO,uBAAkB,GAAyB,IAAI,mBAAY,EAAU,CAAC;QAEhF;;WAEG;QACO,wBAAmB,GAAyB,IAAI,mBAAY,EAAU,CAAC;QAEjF;;WAEG;QACO,sBAAiB,GAAyB,IAAI,mBAAY,EAAU,CAAC;QAE/E;;WAEG;QACO,2BAAsB,GAAyB,IAAI,mBAAY,EAAU,CAAC;QAEpF;;WAEG;QACO,oBAAe,GAAyB,IAAI,mBAAY,EAAU,CAAC;QAE7E;;WAEG;QACI,iBAAY,GAAY,KAAK,CAAC;QAErC;;WAEG;QACI,uBAAkB,GAAY,KAAK,CAAC;QAsB3C;;WAEG;QACK,kBAAa,GAAkB,EAAE,CAAC;QAwBtC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,uCAAuC;QACvC,aAAa,CAAC,gBAAgB,EAAE,CAAC;QAEjC,6EAA6E;QAC7E,EAAE,CAAC,CAAC,aAAa,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC;YAEtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAE7B,CAAC;IAEL,CAAC;IAED;;;;OAIG;IACI,mCAAW,GAAlB,UAAmB,QAAgB;QAE/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAEtC,CAAC;IAED;;OAEG;IACI,uCAAe,GAAtB;QAEI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IAEnC,CAAC;IAED;;;;;;OAMG;IACI,+CAAuB,GAA9B,UAA+B,eAAuB,EAAE,MAAe;QAEnE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,oDAAoD;QACpD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAE5B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC;YAE1B,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;YAEpC,6BAA6B;YAC7B,IAAI,eAAe,GAAW,EAAE,CAAC;YAEjC,EAAE,CAAC,CAAC,OAAO,SAAS,CAAC,QAAQ,IAAI,WAAW,CAAC,CAAC,CAAC;gBAC3C,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC;YACzC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,SAAS,CAAC,YAAY,IAAI,WAAW,CAAC,CAAC,CAAC;gBACtD,eAAe,GAAG,SAAS,CAAC,YAAY,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,SAAS,CAAC,eAAe,IAAI,WAAW,CAAC,CAAC,CAAC;gBACzD,eAAe,GAAG,SAAS,CAAC,eAAe,CAAC;YAChD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,SAAS,CAAC,cAAc,IAAI,WAAW,CAAC,CAAC,CAAC;gBACxD,eAAe,GAAG,SAAS,CAAC,cAAc,CAAC;YAC/C,CAAC;YAED,iDAAiD;YACjD,EAAE,CAAC,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC;gBAExB,IAAI,KAAK,GAAW,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBACjD,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEd,eAAe,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,0BAA0B;gBAErF,CAAC;gBAED,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAErF,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;gBAExC,CAAC;YAEL,CAAC;QAEL,CAAC;QAED,2BAA2B;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAE5B,CAAC;IAED;;;;;;;;;OASG;IACI,6CAAqB,GAA5B,UAA6B,eAAuB,EAAE,cAAsB,EAAE,MAAe,EAAE,MAAmB,EAAE,eAA4B,EAAE,QAAqB;QAAxE,sBAAmB,GAAnB,WAAmB;QAAE,+BAA4B,GAA5B,oBAA4B;QAAE,wBAAqB,GAArB,aAAqB;QAEnK,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,oEAAoE;QACpE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAE5B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,IAAI,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC;YAEpD,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;YACpC,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE7B,CAAC;QAED,2BAA2B;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAE5B,CAAC;IAED;;;;OAIG;IACI,+CAAuB,GAA9B,UAA+B,eAAuB;QAElD,qDAAqD;QACrD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAE9B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC;YAE1B,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;QAExC,CAAC;QAED,+BAA+B;QAC/B,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAEnD,CAAC;IAED;;;;OAIG;IACI,0CAAkB,GAAzB;QAEI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAE7B,CAAC;IAED;;;;OAIG;IACI,yCAAiB,GAAxB;QAEI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAE5B,CAAC;IAED;;;;OAIG;IACI,0CAAkB,GAAzB;QAEI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAE7B,CAAC;IAED;;;;OAIG;IACI,iCAAS,GAAhB;QAEI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAE3B,CAAC;IAED;;;;OAIG;IACI,0CAAkB,GAAzB;QAEI,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;IAEhC,CAAC;IAED;;;;OAIG;IACI,mCAAW,GAAlB;QAEI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IAEzB,CAAC;IAED;;;;OAIG;IACI,0CAAkB,GAAzB,UAA0B,QAAgB;QAEtC,sCAAsC;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC;YAEhC,sCAAsC;YACtC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAC7B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAExC,2BAA2B;YAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE5B,CAAC;IAEL,CAAC;IAED;;;;;;;;OAQG;IACI,wCAAgB,GAAvB,UAAwB,QAAgB,EAAE,OAAe,EAAE,MAAmB,EAAE,eAA4B,EAAE,QAAqB;QAAxE,sBAAmB,GAAnB,WAAmB;QAAE,+BAA4B,GAA5B,oBAA4B;QAAE,wBAAqB,GAArB,aAAqB;QAE/H,iEAAiE;QACjE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,OAAO,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,IAAI,IAAI,CAAC,eAAe,IAAI,eAAe,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;YAEpK,yCAAyC;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC;gBAAC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAAC,CAAC;YAC7G,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,OAAO,CAAC,CAAC,CAAC;gBAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;gBAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAAC,CAAC;YACvG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;gBAAC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;gBAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAAC,CAAC;YACjG,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,eAAe,CAAC,CAAC,CAAC;gBAAC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;gBAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAAC,CAAC;YAC3I,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;gBAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAAC,CAAC;YAEjG,2BAA2B;YAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE5B,CAAC;IAEL,CAAC;IAED;;;;OAIG;IACI,0CAAkB,GAAzB,UAA0B,QAAgB;QAEtC,sCAAsC;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC;YAEhC,sCAAsC;YACtC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAC7B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAExC,+BAA+B;YAC/B,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAEnD,CAAC;IAEL,CAAC;IAED;;;;OAIG;IACI,wCAAgB,GAAvB;QAEI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAE9B,CAAC;IAED;;OAEG;IACK,wCAAgB,GAAxB;QAEI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;QAEvC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACzE,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAE3E,oCAAoC;QACpC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,GAAG,IAAI,GAAG,EAAE,CAAC;QACpF,yBAAyB;QACzB,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe,IAAI,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QACtF,iBAAiB;QACjB,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAExE,6BAA6B;QAC7B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAElD,CAAC;IAED;;;;OAIG;IACK,oCAAY,GAApB,UAAqB,IAAY;QAE7B,IAAI,OAAO,GAAW,EAAE,CAAC;QAEzB,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAErD,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAEzC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAEjF,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEnC,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;YAEhB,yCAAyC;YACzC,IAAI,KAAK,GAAW,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACzC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEd,IAAI,UAAU,GAAa,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACnE,MAAM,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;oBAExB,KAAK,CAAC;wBACF,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;wBACzC,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;4BAC/B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAK,CAAC;oBACV,KAAK,CAAC;wBACF,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;wBACrC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;wBAC9B,KAAK,CAAC;gBAEd,CAAC;gBAED,sBAAsB;gBACtB,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAE1C,CAAC;YAED,oCAAoC;YACpC,IAAI,KAAK,GAAa,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEzC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBAEnB,KAAK,CAAC;oBACF,EAAE,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACjC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC;wBAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACjC,CAAC;oBACD,KAAK,CAAC;gBACV,KAAK,CAAC;oBACF,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC;gBACV,KAAK,CAAC;oBACF,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC;YAEd,CAAC;QAEL,CAAC;IAEL,CAAC;IAED;;;;OAIG;IACK,0CAAkB,GAA1B;QAEI,MAAM,CAAC,OAAO,OAAO,IAAI,WAAW,CAAC;IAEzC,CAAC;IAED;;;;OAIG;IACK,oCAAY,GAApB;QAEI,MAAM,CAAC,OAAO,SAAS,CAAC,aAAa,IAAI,WAAW,IAAI,SAAS,CAAC,aAAa,CAAC;IAEpF,CAAC;IAED;;;;;OAKG;IACK,kCAAU,GAAlB,UAAmB,IAAY,EAAE,KAAa;QAE1C,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAErD,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAEtC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAEzF,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE7C,CAAC;IAEL,CAAC;IAED;;;;;OAKG;IACK,uCAAe,GAAvB,UAAwB,IAAY,EAAE,KAAa;QAE/C,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAEtC,CAAC;IAED;;;;;OAKG;IACK,uCAAe,GAAvB,UAAwB,IAAY;QAEhC,wDAAwD;QACxD,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;IAEhF,CAAC;IAED;;;;;;OAMG;IACK,iCAAS,GAAjB,UAAkB,IAAY,EAAE,KAAa,EAAE,IAAa;QAExD,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YAEf,sCAAsC;YACtC,IAAI,cAAc,GAAS,IAAI,IAAI,EAAE,CAAC;YAEtC,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;YAEhF,IAAI,OAAO,GAAW,YAAY,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC;QAEtE,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,gEAAgE;YAChE,IAAI,OAAO,GAAW,EAAE,CAAC;QAE7B,CAAC;QAED,sBAAsB;QACtB,QAAQ,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,OAAO,GAAG,UAAU,CAAC;IAEhE,CAAC;IAED;;;;;OAKG;IACK,iCAAS,GAAjB,UAAkB,IAAY;QAE1B,0BAA0B;QAC1B,IAAI,IAAI,GAAG,CAAC;QAEZ,sDAAsD;QACtD,IAAI,EAAE,GAAa,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE9C,wDAAwD;QACxD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAEzC,IAAI,CAAC,GAAW,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;gBAExB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAEvB,CAAC;YACD,2DAA2D;YAC3D,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAEvB,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;YAE9C,CAAC;QACL,CAAC;QAED,uDAAuD;QACvD,MAAM,CAAC,EAAE,CAAC;IAEd,CAAC;IA1mBD;;OAEG;IACY,8BAAgB,GAAW,CAAC,CAAC;IAK5C;QAAC,aAAM,EAAE;;8DAAA;IAKT;QAAC,aAAM,EAAE;;6DAAA;IAKT;QAAC,aAAM,EAAE;;8DAAA;IAKT;QAAC,aAAM,EAAE;;4DAAA;IAKT;QAAC,aAAM,EAAE;;iEAAA;IAKT;QAAC,aAAM,EAAE;;0DAAA;IAnCb;QAAC,iBAAU,EAAE;;qBAAA;IA8mBb,oBAAC;AAAD,CA9mBc,AA8mBb,IAAA;AA9mB0B,qBAAa,gBA8mBvC,CAAA","file":"src/services/locale.service.js","sourcesContent":["/**\n * ANGULAR 2 LOCALIZATION\n * An Angular 2 library to translate messages, dates and numbers.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular2localization\n */\n\nimport { Injectable, EventEmitter, Output } from '@angular/core';\n\n/**\n * LocaleService class.\n * Defines language, default locale & currency.\n * \n * Instantiate this class only once in the route component in order to access the data of location from anywhere in the application: \n * \n * FIRST SCENARIO - Dates & numbers.\n * \n * import {LocaleService} from 'angular2localization/angular2localization';\n *\n * @Component({\n *     selector: 'app-component',\n *     ...\n *     providers: [LocaleService] // Inherited by all descendants.\n * })\n * \n * export class AppComponent {\n * \n *     constructor(public locale: LocaleService) {\n * \n *         // Required: default language (ISO 639 two-letter or three-letter code) and country (ISO 3166 two-letter, uppercase code).\n *         this.locale.definePreferredLocale('en', 'US');\n * \n *         // Optional: default currency (ISO 4217 three-letter code).\n *         this.locale.definePreferredCurrency('USD');\n * \n *      }\n * \n * }\n * \n * SECOND SCENARIO - Messages.\n * \n * import {LocaleService, LocalizationService} from 'angular2localization/angular2localization';\n *\n * @Component({\n *     selector: 'app-component',\n *     ...\n *     providers: [LocaleService, LocalizationService] // Inherited by all descendants.\n * })\n * \n * export class AppComponent {\n * \n *     constructor(public locale: LocaleService, public localization: LocalizationService) {\n * \n *         // Adds a new language (ISO 639 two-letter or three-letter code).\n *         this.locale.addLanguage('en');\n *         // Add a new language here.\n * \n *         // Required: default language and expiry (No days). If the expiry is omitted, the cookie becomes a session cookie.\n *         this.locale.definePreferredLanguage('en', 30);\n *           \n *     }\n * \n * }\n * \n * THIRD SCENARIO - Messages, dates & numbers.\n * \n * import {LocaleService, LocalizationService} from 'angular2localization/angular2localization';\n *\n * @Component({\n *     selector: 'app-component',\n *     ...\n *     providers: [LocaleService, LocalizationService] // Inherited by all descendants.\n * })\n * \n * export class AppComponent {\n * \n *     constructor(public locale: LocaleService, public localization: LocalizationService) {\n * \n *         // Adds a new language (ISO 639 two-letter or three-letter code).\n *         this.locale.addLanguage('en');\n *         // Add a new language here.\n * \n *         // Required: default language, country (ISO 3166 two-letter, uppercase code) and expiry (No days). If the expiry is omitted, the cookie becomes a session cookie.\n *         this.locale.definePreferredLocale('en', 'US', 30);\n *  \n *         // Optional: default currency (ISO 4217 three-letter code).\n *         this.locale.definePreferredCurrency('USD');\n * \n *     }\n * \n * }\n * \n * Changing language.\n * \n * To change language at runtime, call the following method:\n *  \n * this.locale.setCurrentLanguage(language);\n * \n * where 'language' is the two-letter or three-letter code of the new language (ISO 639).\n * \n * \n * Changing locale.\n * \n * To change locale at runtime, call the following method:\n *  \n * this.locale.setCurrentLocale(language, country);\n * \n * where 'language' is the two-letter or three-letter code of the new language (ISO 639)\n * and 'country' is the two-letter, uppercase code of the new country (ISO 3166).\n *\n * \n * Changing currency.\n * \n * To change currency at runtime, call the following method:\n *  \n * this.locale.setCurrentCurrency(currency);\n * \n * where 'currency' is the three-letter code of the new currency (ISO 4217).\n * \n * @author Roberto Simonetti\n */\n@Injectable() export class LocaleService {\n\n    /**\n     * Reference counter for the service. \n     */\n    private static referenceCounter: number = 0;\n\n    /**\n     * Output for event current language code changed.\n     */\n    @Output() languageCodeChanged: EventEmitter<string> = new EventEmitter<string>();\n\n    /**\n     * Output for event current country code changed.\n     */\n    @Output() countryCodeChanged: EventEmitter<string> = new EventEmitter<string>();\n\n    /**\n     * Output for event current currency code changed.\n     */\n    @Output() currencyCodeChanged: EventEmitter<string> = new EventEmitter<string>();\n\n    /**\n     * Output for event script code changed.\n     */\n    @Output() scriptCodeChanged: EventEmitter<string> = new EventEmitter<string>();\n\n    /**\n     * Output for event numbering system changed.\n     */\n    @Output() numberingSystemChanged: EventEmitter<string> = new EventEmitter<string>();\n\n    /**\n     * Output for event calendar changed.\n     */\n    @Output() calendarChanged: EventEmitter<string> = new EventEmitter<string>();\n\n    /**\n     * Enable/disable cookie.\n     */\n    public enableCookie: boolean = false;\n\n    /**\n     * Enable/disable Local Storage.\n     */\n    public enableLocalStorage: boolean = false;\n\n    /**\n     * Current language code.\n     */\n    private languageCode: string;\n\n    /**\n     * Current country code.\n     */\n    private countryCode: string;\n\n    /**\n     * Current currency code.\n     */\n    private currencyCode: string;\n\n    /**\n     * Default locale.\n     */\n    private defaultLocale: string;\n\n    /**\n     * The available language codes.\n     */\n    private languageCodes: Array<string> = [];\n\n    /**\n     * Defines when the cookie will be removed.\n     */\n    private expiry: number;\n\n    /**\n     * The optional script code.\n     */\n    private scriptCode: string;\n\n    /**\n     * The optional numbering system.\n     */\n    private numberingSystem: string;\n\n    /**\n     * The optional calendar.\n     */\n    private calendar: string;\n\n    constructor() {\n\n        this.languageCode = \"\";\n        this.countryCode = \"\";\n        this.currencyCode = \"\";\n        this.defaultLocale = \"\";\n\n        this.scriptCode = \"\";\n        this.numberingSystem = \"\";\n        this.calendar = \"\";\n\n        // Counts the reference to the service.\n        LocaleService.referenceCounter++;\n\n        // Enables the cookies for the first instance of the service (see issue #11).\n        if (LocaleService.referenceCounter == 1) {\n\n            this.enableCookie = true;\n\n        }\n\n    }\n\n    /**\n     * Adds a new language.\n     * \n     * @param language The two-letter or three-letter code of the new language\n     */\n    public addLanguage(language: string): void {\n\n        this.languageCodes.push(language);\n\n    }\n\n    /**\n     * Sets Local Storage as default.\n     */\n    public useLocalStorage(): void {\n\n        this.enableLocalStorage = true;\n\n    }\n\n    /**\n     * Defines the preferred language. \n     * Selects the current language of the browser if it has been added, else the default language. \n     * \n     * @param defaultLanguage The two-letter or three-letter code of the default language\n     * @param expiry Number of days on the expiry. If omitted, the cookie becomes a session cookie\n     */\n    public definePreferredLanguage(defaultLanguage: string, expiry?: number): void {\n\n        this.expiry = expiry;\n\n        // Parses the storage \"locale\" to extract the codes.\n        this.parseStorage(\"locale\");\n\n        if (this.languageCode == \"\") {\n\n            this.languageCode = defaultLanguage;\n\n            // Verifies browser language.\n            var browserLanguage: string = \"\";\n\n            if (typeof navigator.language != \"undefined\") {\n                browserLanguage = navigator.language;\n            } else if (typeof navigator.userLanguage != \"undefined\") {\n                browserLanguage = navigator.userLanguage;\n            } else if (typeof navigator.browserLanguage != \"undefined\") {\n                browserLanguage = navigator.browserLanguage;\n            } else if (typeof navigator.systemLanguage != \"undefined\") {\n                browserLanguage = navigator.systemLanguage;\n            }\n\n            // Tries to gets the current language of browser.\n            if (browserLanguage != \"\") {\n\n                var index: number = browserLanguage.indexOf(\"-\");\n                if (index != -1) {\n\n                    browserLanguage = browserLanguage.substring(0, index); // Gets the language code.\n\n                }\n\n                if (this.languageCodes.length > 0 && this.languageCodes.indexOf(browserLanguage) != -1) {\n\n                    this.languageCode = browserLanguage;\n\n                }\n\n            }\n\n        }\n\n        // Sets the default locale.\n        this.setDefaultLocale();\n\n    }\n\n    /**\n     * Defines preferred languange and country, regardless of the browser language.\n     * \n     * @param defaultLanguage The two-letter or three-letter code of the default language\n     * @param defaultCountry The two-letter, uppercase code of the default country\n     * @param expiry Number of days on the expiry. If omitted, the cookie becomes a session cookie\n     * @param script The optional four-letter script code\n     * @param numberingSystem The optional numbering system to be used\n     * @param calendar The optional calendar to be used\n     */\n    public definePreferredLocale(defaultLanguage: string, defaultCountry: string, expiry?: number, script: string = \"\", numberingSystem: string = \"\", calendar: string = \"\"): void {\n\n        this.expiry = expiry;\n\n        // Parses the storage \"locale\" to extract the codes & the extension.\n        this.parseStorage(\"locale\");\n\n        if (this.languageCode == \"\" || this.countryCode == \"\") {\n\n            this.languageCode = defaultLanguage;\n            this.countryCode = defaultCountry;\n            this.scriptCode = script;\n            this.numberingSystem = numberingSystem;\n            this.calendar = calendar;\n\n        }\n\n        // Sets the default locale.\n        this.setDefaultLocale();\n\n    }\n\n    /**\n     * Defines the preferred currency. \n     * \n     * @param defaultCurrency The three-letter code of the default currency\n     */\n    public definePreferredCurrency(defaultCurrency: string): void {\n\n        // Parses the storage \"currency\" to extract the code.\n        this.parseStorage(\"currency\");\n\n        if (this.currencyCode == \"\") {\n\n            this.currencyCode = defaultCurrency;\n\n        }\n\n        // Sets the storage \"currency\".\n        this.setStorage(\"currency\", this.currencyCode);\n\n    }\n\n    /**\n     * Gets the current language.\n     * \n     * @return The two-letter or three-letter code of the current language\n     */\n    public getCurrentLanguage(): string {\n\n        return this.languageCode;\n\n    }\n\n    /**\n     * Gets the current country.\n     * \n     * @return The two-letter, uppercase code of the current country\n     */\n    public getCurrentCountry(): string {\n\n        return this.countryCode;\n\n    }\n\n    /**\n     * Gets the current currency.\n     * \n     * @return The three-letter code of the current currency\n     */\n    public getCurrentCurrency(): string {\n\n        return this.currencyCode;\n\n    }\n\n    /**\n     * Gets the script.\n     * \n     * @return The four-letter code of the script\n     */\n    public getScript(): string {\n\n        return this.scriptCode;\n\n    }\n\n    /**\n     * Gets the numbering system.\n     * \n     * @return The numbering system\n     */\n    public getNumberingSystem(): string {\n\n        return this.numberingSystem;\n\n    }\n\n    /**\n     * Gets the calendar.\n     * \n     * @return The calendar\n     */\n    public getCalendar(): string {\n\n        return this.calendar;\n\n    }\n\n    /**\n     * Sets the current language.\n     * \n     * @param language The two-letter or three-letter code of the new language\n     */\n    public setCurrentLanguage(language: string): void {\n\n        // Checks if the language has changed.\n        if (this.languageCode != language) {\n\n            // Assigns the value & sends an event.\n            this.languageCode = language;\n            this.languageCodeChanged.emit(language);\n\n            // Sets the default locale.\n            this.setDefaultLocale();\n\n        }\n\n    }\n\n    /**\n     * Sets the current locale.\n     * \n     * @param language The two-letter or three-letter code of the new language\n     * @param country The two-letter, uppercase code of the new country\n     * @param script The optional four-letter script code\n     * @param numberingSystem The optional numbering system to be used\n     * @param calendar The optional calendar to be used\n     */\n    public setCurrentLocale(language: string, country: string, script: string = \"\", numberingSystem: string = \"\", calendar: string = \"\"): void {\n\n        // Checks if language, country, script or extension have changed.\n        if (this.languageCode != language || this.countryCode != country || this.scriptCode != script || this.numberingSystem != numberingSystem || this.calendar != calendar) {\n\n            // Assigns the values & sends the events.\n            if (this.languageCode != language) { this.languageCode = language; this.languageCodeChanged.emit(language); }\n            if (this.countryCode != country) { this.countryCode = country; this.countryCodeChanged.emit(country); }\n            if (this.scriptCode != script) { this.scriptCode = script; this.scriptCodeChanged.emit(script); }\n            if (this.numberingSystem != numberingSystem) { this.numberingSystem = numberingSystem; this.numberingSystemChanged.emit(numberingSystem); }\n            if (this.calendar != calendar) { this.calendar = calendar; this.calendarChanged.emit(calendar); }\n\n            // Sets the default locale.\n            this.setDefaultLocale();\n\n        }\n\n    }\n\n    /**\n     * Sets the current currency.\n     * \n     * @param currency The three-letter code of the new currency\n     */\n    public setCurrentCurrency(currency: string): void {\n\n        // Checks if the currency has changed.\n        if (this.currencyCode != currency) {\n\n            // Assigns the value & sends an event.\n            this.currencyCode = currency;\n            this.currencyCodeChanged.emit(currency);\n\n            // Sets the storage \"currency\".\n            this.setStorage(\"currency\", this.currencyCode);\n\n        }\n\n    }\n\n    /**\n     * Gets the default locale.\n     * \n     * @return The default locale\n     */\n    public getDefaultLocale(): string {\n\n        return this.defaultLocale;\n\n    }\n\n    /**\n     * Builds the default locale.\n     */\n    private setDefaultLocale(): void {\n\n        this.defaultLocale = this.languageCode;\n\n        this.defaultLocale += this.scriptCode != \"\" ? \"-\" + this.scriptCode : \"\";\n        this.defaultLocale += this.countryCode != \"\" ? \"-\" + this.countryCode : \"\";\n\n        // Adds the 'u' (Unicode) extension.\n        this.defaultLocale += this.numberingSystem != \"\" || this.calendar != \"\" ? \"-u\" : \"\";\n        // Adds numbering system.\n        this.defaultLocale += this.numberingSystem != \"\" ? \"-nu-\" + this.numberingSystem : \"\";\n        // Adds calendar.\n        this.defaultLocale += this.calendar != \"\" ? \"-ca-\" + this.calendar : \"\";\n\n        // Sets the storage \"locale\".\n        this.setStorage(\"locale\", this.defaultLocale);\n\n    }\n\n    /**\n     * Parses the storage to extract the codes & the extension.\n     * \n     * @param name The name of the storage\n     */\n    private parseStorage(name: string): void {\n\n        var storage: string = \"\";\n\n        if (this.enableLocalStorage && this.verifyLocalStorage) {\n\n            storage = this.getLocalStorage(name);\n\n        } else if (this.enableCookie && this.languageCodes.length > 0 && this.verifyCookie) {\n\n            storage = this.getCookie(name);\n\n        }\n\n        if (storage != \"\") {\n\n            // Looks for the 'u' (Unicode) extension.\n            var index: number = storage.search(\"-u\");\n            if (index != -1) {\n\n                var extensions: string[] = storage.substring(index + 1).split(\"-\");\n                switch (extensions.length) {\n\n                    case 3:\n                        if (extensions[1] == \"nu\") {\n                            this.numberingSystem = extensions[2];\n                        } else if (extensions[1] == \"ca\") {\n                            this.calendar = extensions[2];\n                        }\n                        break;\n                    case 5:\n                        this.numberingSystem = extensions[2];\n                        this.calendar = extensions[4];\n                        break;\n\n                }\n\n                // Extracts the codes.\n                storage = storage.substring(0, index);\n\n            }\n\n            // Splits the string to each hyphen.\n            var codes: string[] = storage.split(\"-\");\n\n            switch (codes.length) {\n\n                case 1:\n                    if (name == \"locale\") {\n                        this.languageCode = codes[0];\n                    } else if (name == \"currency\") {\n                        this.currencyCode = codes[0];\n                    }\n                    break;\n                case 2:\n                    this.languageCode = codes[0];\n                    this.countryCode = codes[1];\n                    break;\n                case 3:\n                    this.languageCode = codes[0];\n                    this.scriptCode = codes[1];\n                    this.countryCode = codes[2];\n                    break;\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Checks browser support for Local Storage.\n     * \n     * @return True if Web Storage is supported.\n     */\n    private verifyLocalStorage(): boolean {\n\n        return typeof Storage != \"undefined\";\n\n    }\n\n    /**\n     * Checks browser support for cookies.\n     * \n     * @return True if cookies are supported.\n     */\n    private verifyCookie(): boolean {\n\n        return typeof navigator.cookieEnabled != \"undefined\" && navigator.cookieEnabled;\n\n    }\n\n    /**\n     * Sets the storage.\n     * \n     * @param name The name of the storage\n     * @param value The value of the storage\n     */\n    private setStorage(name: string, value: string): void {\n\n        if (this.enableLocalStorage && this.verifyLocalStorage) {\n\n            this.setLocalStorage(name, value);\n\n        } else if (this.enableCookie == true && this.languageCodes.length > 0 && this.verifyCookie) {\n\n            this.setCookie(name, value, this.expiry);\n\n        }\n\n    }\n\n    /**\n     * Saves Local Storage value.\n     * \n     * @param name The name of the storage\n     * @param value The value of the storage\n     */\n    private setLocalStorage(name: string, value: string): void {\n\n        localStorage.setItem(name, value);\n\n    }\n\n    /**\n     * Saves Local Storage value.\n     * \n     * @param name The name of the storage\n     * @return The value of the storage\n     */\n    private getLocalStorage(name: string): string {\n\n        // If the storage is not found, returns an empty string.\n        return localStorage.getItem(name) != null ? localStorage.getItem(name) : \"\";\n\n    }\n\n    /**\n     * Sets the cookie.\n     * \n     * @param name The name of the cookie\n     * @param value The value of the cookie\n     * @param days Number of days on the expiry\n     */\n    private setCookie(name: string, value: string, days?: number): void {\n\n        if (days != null) {\n\n            // Adds the expiry date (in UTC time).\n            var expirationDate: Date = new Date();\n\n            expirationDate.setTime(expirationDate.getTime() + (days * 24 * 60 * 60 * 1000));\n\n            var expires: string = \"; expires=\" + expirationDate.toUTCString();\n\n        } else {\n\n            // By default, the cookie is deleted when the browser is closed.\n            var expires: string = \"\";\n\n        }\n\n        // Creates the cookie.\n        document.cookie = name + \"=\" + value + expires + \"; path=/\";\n\n    }\n\n    /**\n     * Gets the cookie.\n     * \n     * @param name The name of the cookie\n     * @return The value of the cookie\n     */\n    private getCookie(name: string): string {\n\n        // The text to search for.\n        name += \"=\";\n\n        // Splits document.cookie on semicolons into an array.\n        var ca: string[] = document.cookie.split(\";\");\n\n        // Loops through the ca array, and reads out each value.\n        for (var i: number = 0; i < ca.length; i++) {\n\n            var c: string = ca[i];\n\n            while (c.charAt(0) == \" \") {\n\n                c = c.substring(1);\n\n            }\n            // If the cookie is found, returns the value of the cookie.\n            if (c.indexOf(name) == 0) {\n\n                return c.substring(name.length, c.length);\n\n            }\n        }\n\n        // If the cookie is not found, returns an empty string.\n        return \"\";\n\n    }\n\n}\n"],"sourceRoot":"/source/"}